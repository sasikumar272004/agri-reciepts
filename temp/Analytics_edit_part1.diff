import { useState, useEffect } from 'react';
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
import { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, PieChart, Pie, Cell, LineChart, Line, ResponsiveContainer } from 'recharts';
import { useToast } from "@/hooks/use-toast";
import { useReceiptData } from '@/hooks/useReceiptData';

const CustomTooltip = ({ active, payload, label }: any) => {
  if (active && payload && payload.length) {
    const data = payload[0].payload;
    const subLocs = data.subLocations || {};
    const COLORS = ['#4caf50', '#82ca9d', '#ffc658', '#ff7300', '#8dd1e1', '#d084d0', '#ffb347'];

    return (
      <div style={{ backgroundColor: 'white', border: '1px solid #ccc', padding: 10, borderRadius: 4, minWidth: 200 }}>
        <p style={{ margin: 0, fontWeight: 'bold' }}>{label}</p>
        <p style={{ margin: '4px 0' }}>Total: ₹{data.value.toFixed(0)}</p>
        <div style={{ display: 'flex', flexDirection: 'column', gap: 4 }}>
          {Object.entries(subLocs).map(([subLoc, val], index) => (
            <div key={index} style={{ display: 'flex', alignItems: 'center', gap: 8 }}>
              <div style={{ width: 12, height: 12, backgroundColor: COLORS[index % COLORS.length], borderRadius: '50%' }}></div>
              <span>{subLoc}: ₹{(val as number).toFixed(0)}</span>
            </div>
          ))}
        </div>
      </div>
    );
  }

  return null;
};

const Analytics = ({ user }: { user: any }) => {
  const { userAccessibleReceipts, receiptsLoading, userCommitteeId } = useReceiptData(user);
  const { toast } = useToast();

  const [startDate, setStartDate] = useState<string>('');
  const [endDate, setEndDate] = useState<string>('');

  const [activeIndex, setActiveIndex] = useState<number | null>(null);

  if (receiptsLoading) {
    return (
      <div className="space-y-6">
        <div className="text-center py-8">Loading analytics data...</div>
      </div>
    );
  }
=======
import React, { useState, useEffect } from 'react';
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
import { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, PieChart, Pie, Cell, LineChart, Line, ResponsiveContainer } from 'recharts';
import { useToast } from "@/hooks/use-toast";

const CustomTooltip = ({ active, payload, label }: any) => {
  if (active && payload && payload.length) {
    const data = payload[0].payload;
    const subLocs = data.subLocations || {};
    const COLORS = ['#4caf50', '#82ca9d', '#ffc658', '#ff7300', '#8dd1e1', '#d084d0', '#ffb347'];

    return (
      <div style={{ backgroundColor: 'white', border: '1px solid #ccc', padding: 10, borderRadius: 4, minWidth: 200 }}>
        <p style={{ margin: 0, fontWeight: 'bold' }}>{label}</p>
        <p style={{ margin: '4px 0' }}>Total: ₹{data.value.toFixed(0)}</p>
        <div style={{ display: 'flex', flexDirection: 'column', gap: 4 }}>
          {Object.entries(subLocs).map(([subLoc, val], index) => (
            <div key={index} style={{ display: 'flex', alignItems: 'center', gap: 8 }}>
              <div style={{ width: 12, height: 12, backgroundColor: COLORS[index % COLORS.length], borderRadius: '50%' }}></div>
              <span>{subLoc}: ₹{(val as number).toFixed(0)}</span>
            </div>
          ))}
        </div>
      </div>
    );
  }

  return null;
};

const Analytics = ({ user }: { user: any }) => {
  const { toast } = useToast();

  const [startDate, setStartDate] = useState<string>('');
  const [endDate, setEndDate] = useState<string>('');
